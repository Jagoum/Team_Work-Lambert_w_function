name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    name: Rust project - latest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry and build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

  
      - uses: actions/checkout@v4
      - run: rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}
      - run: rustup component add rustfmt
      - run: cargo build --verbose
      - run: cargo test --verbose
      - run: cargo fmt --all -- --check

  clippy_check:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup update stable && rustup default stable
      - run: cargo clippy --all-targets --all-features

  docker-build:
    needs: build_and_test  # Fixed job dependency
    runs-on: ubuntu-latest
    permissions:
      packages: write  # Grant permission to write to GHCR
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.TOKEN }}  # Use the TOKEN secret for the username
          password: ${{ secrets.GITHUB_TOKEN }}  # Use the GITHUB_TOKEN secret for the password

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ secrets.TOKEN }}/team_work-lambert_w_function:sha-${{ github.sha }}
            ghcr.io/${{ secrets.TOKEN }}/team_work-lambert_w_function:branch-${{ github.ref_name }}
            ghcr.io/${{ secrets.TOKEN }}/team_work-lambert_w_function:latest

      - name: Slim Docker image
        uses: kitabisa/docker-slim-action@v1
        env:
          DSLIM_HTTP_PROBE: "false"
        with:
          target: ghcr.io/${{ secrets.TOKEN }}/team_work-lambert_w_function:latest  # Use the full repository path
          tag: slim 

      - name: Push slimmed Docker image
        run: |
          docker push ghcr.io/${{ secrets.TOKEN }}/team_work-lambert_w_function:slim
